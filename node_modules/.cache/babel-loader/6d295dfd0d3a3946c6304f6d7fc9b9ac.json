{"remainingRequest":"C:\\xampp\\htdocs\\vue_scg\\vue_scg_demo\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\vue_scg\\vue_scg_demo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\vue_scg\\vue_scg_demo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\vue_scg\\vue_scg_demo\\src\\views\\MAPI.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\vue_scg\\vue_scg_demo\\src\\views\\MAPI.vue","mtime":1587455949752},{"path":"C:\\xampp\\htdocs\\vue_scg\\vue_scg_demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\vue_scg\\vue_scg_demo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\vue_scg\\vue_scg_demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\vue_scg\\vue_scg_demo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwb3N0czogW10sCiAgICAgIGVycm9yczogW10KICAgIH07CiAgfSwKICAvLyBGZXRjaGVzIHBvc3RzIHdoZW4gdGhlIGNvbXBvbmVudCBpcyBjcmVhdGVkLgogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIGF4aW9zLmdldCgiaHR0cDovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMiKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAvLyBKU09OIHJlc3BvbnNlcyBhcmUgYXV0b21hdGljYWxseSBwYXJzZWQuCiAgICAgIF90aGlzLnBvc3RzID0gcmVzcG9uc2UuZGF0YTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgIF90aGlzLmVycm9ycy5wdXNoKGUpOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["MAPI.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAQA;AACA,EAAA,OATA,qBASA;AAAA;;AACA,IAAA,KAAA,CAAA,GAAA,8CACA,IADA,CACA,UAAA,QAAA,EAAA;AACA;AACA,MAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,KAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA,KAPA;AAUA;AApBA,CAAA","sourcesContent":["<template >\n  <div id=\"MAPI\">\n    <h1>MAPI</h1>\n    <ul v-if=\"posts && posts.length\">\n    <li v-for=\"post of posts\" :key=\"post.userId\">\n      <p><strong>{{post.id}} : {{post.title}}</strong></p>\n     \n      <p>{{post.body}}</p>\n    </li>\n  </ul>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      posts: [],\n      errors: []\n    }\n  },\n\n  // Fetches posts when the component is created.\n  created() {\n    axios.get(`http://jsonplaceholder.typicode.com/posts`)\n    .then(response => {\n      // JSON responses are automatically parsed.\n      this.posts = response.data\n    })\n    .catch(e => {\n      this.errors.push(e)\n    })\n\n    \n  }\n}\n</script>\n\n\n<style>\n</style>\n"],"sourceRoot":"src/views"}]}